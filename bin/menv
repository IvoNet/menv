#!/usr/bin/env bash

bold="$(tput bold)"
reset="$(tput sgr0)"
red="$(tput setaf 1)"
green="$(tput setaf 2)"

set -e
[[ -n "$MENV_DEBUG" ]] && set -x

VERSION="!!!VERSION!!!"
MENV_PROFILE=".menv_profile"
SYSTEM_DEFAULT_PROFILE_NAME="system default"

USAGE=$(
  cat <<EOF
Usage: menv <command> [<args>]

active             Show active profile.
delete             Deletes the set menv profile for this directory (if exists).
edit [profile]     Edit the active profile or the provided profile.
editopts [profile] Edit the active maven_opt or for the provided profile.
help               Help information.
idea               Override IntelliJ maven user settings file to profile "settings.xml".
install            Initialize menv for mvn.
list               Lists all possible profiles you can choose from.
profile [profile]  set ${green}profile${reset} to active profile for this
                   folder and underlying folders. if no profile provided you get a list of available
                   profiles to choose from.
version            Show version information.

Naming convention:

- ~/.menv/settings.xml.<NAME_OF_PROFILE>
  These files will be seen as possible profiles you can set
  They should be your custom settings.xml files
- ~/.menv/<NAME_OF_PROFILE>.maven_opts
  These files will be seen as custom MAVEN_OPTS for the profiles.
  it can contain 1 line with all the MAVEN_OPTS in it

Environment variables:

You can set the editor of your choise by either setting the MENV_EDITOR setting
or the EDITOR variable, e.g.:
  export MENV_EDITOR=nano
Note that by setting the EDITOR setting you might also affect other tools.
The editor will ultimately default to vi.
EOF
)

WORKSPACE_TEMPLATE=$(
  cat <<EOF
    <component name="MavenImportPreferences">
        <option name="generalSettings">
            <MavenGeneralSettings>
                <option name="userSettingsFile" value="${HOME}/.menv/settings.xml.TEMPLATE" />
            </MavenGeneralSettings>
        </option>
    </component>
</project>
EOF
)

WORKSPACE_WORKSPACE_TEMPLATE=$(
  cat <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
</project>
EOF
)

brew_relink_menv() {
  echo "Relinking menv scripts"
  brew link --overwrite menv >/dev/null 2>&1
  brew unlink menv >/dev/null 2>&1
  brew link menv >/dev/null 2>&1
  echo "menv is now ready for use."
}

die() {
  echo >&2 "[${red}${bold}ERROR${reset}] The job ended in error."
  echo -e "[${red}${bold}ERROR${reset}] $*"
  exit 1
}

save_orig_settings_xml() {
  if [[ -f "${HOME}/.m2/settings.xml" ]]; then
    cp "${HOME}/.m2/settings.xml" "${HOME}/.menv/m2_settings.xml"
  fi
  orig_settings="$(find "$(brew --cellar)"/maven -depth 1 -type d | sort | tail -1)/libexec/conf/settings.xml"
  if [[ -f "${orig_settings}" ]]; then
    cp "${orig_settings}" "${HOME}/.menv/libexec_settings.xml"
  fi
  touch "${HOME}/.menv/.activated"
}

list_settings() {
  find "${HOME}"/.menv -maxdepth 1 -regex '.*/settings\.xml.*' | sort | sed "s/^.*settings.xml.//g"
}

find_local_version_file() {
  local root="$1"
  while [ -n "$root" ]; do
    if [ -e "${root}/.menv_profile" ]; then
      CURRENT_PROFILE_FILE="${root}/.menv_profile"
      return
    fi
    root="${root%/*}"
  done
}

retrieve_active_profile() {
  find_local_version_file "${MENV_DIR}"
  [ "${MENV_DIR}" = "${PWD}" ] || find_local_version_file "${PWD}"
  if [[ -f "${CURRENT_PROFILE_FILE}" ]]; then
    ACTIVE_PROFILE=$(<"${CURRENT_PROFILE_FILE}")
  else
    ACTIVE_PROFILE="${SYSTEM_DEFAULT_PROFILE_NAME}"
  fi
}

print_active_profile() {
  retrieve_active_profile

  echo -e "Active profile: [${green}${bold}${ACTIVE_PROFILE}${reset}]"

  if [ "${ACTIVE_PROFILE}" != "${SYSTEM_DEFAULT_PROFILE_NAME}" ] && [[ -f "${HOME}/.menv/${ACTIVE_PROFILE}.maven_opts" ]]; then
    ACTIVE_OPTIONS=$(<"${HOME}/.menv/${ACTIVE_PROFILE}.maven_opts")
    echo -e "Profile specific MAVEN_OPTS: [${green}${bold}$ACTIVE_OPTIONS${reset}]"
  elif [[ -n $MAVEN_OPTS ]]; then
    echo -e "System specific MAVEN_OPTS: [${green}${bold}${MAVEN_OPTS}${reset}]"
  fi

}

get_profiles() {
  found=$(find "${HOME}"/.menv -maxdepth 1 -regex '.*/settings\.xml.*' | sort | sed "s/^.*settings.xml.//g")
  count=$(wc -l <<<"${found}")
  if [[ ${count} -gt 1 ]]; then
    profiles=()
    while read -r line; do
      profiles+=("${line}")
    done <<<"${found}"
  fi
}

set_profile() {
  if [[ -z "${1}" ]]; then
    get_profiles
    if [[ ${count} -gt 1 ]]; then
      select chosen in "${profiles[@]}"; do
        case $REPLY in
          q | 0)
            echo "Quitting...."
            return 0
            ;;
          *)
            if [[ 1 -le "$REPLY" ]] && [[ $REPLY -le ${count} ]]; then
              echo "${chosen}" >"${MENV_PROFILE}"
              echo "Profile set..."
              print_active_profile
              return 0
            else
              echo "Wrong choice."
              echo "Please try again..."
            fi
            ;;
        esac
      done
    else
      echo "No menv profile(s) available."
      return 1
    fi
  fi

  PROFILE=${1}

  if [[ -f "${HOME}/.menv/settings.xml.${PROFILE}" ]]; then
    echo -e "Setting current maven project to [${green}${bold}${PROFILE}${reset}]"
    echo "${PROFILE}" >"${MENV_PROFILE}"
    return 0
  else
    echo "[${red}${bold}ERROR${reset}] Profile [${green}${bold}${PROFILE}${reset}] does not exist."
    echo "Please use one of the following options:"
    list_settings
    echo "Or create a new settings.xml.PROFILE file in ${HOME}/.menv"
    return 1
  fi
}

set_profile_for_idea_project() {

  if [[ ! -f "pom.xml" ]]; then
    echo "Not a maven project or maven project root."
    exit 1
  fi

  # Check if menv has a profile set for this directory, return if absent.
  retrieve_active_profile
  if [ "${ACTIVE_PROFILE}" == "${SYSTEM_DEFAULT_PROFILE_NAME}" ]; then
    echo "No menv profile available."
    exit 1
  fi

  # Check if .idea folder exists, create if absent.
  if [[ ! -d "${PWD}/.idea" ]]; then
    echo "Not an idea project."
    exit 1
  fi

  idea_workspace_file="${PWD}/.idea/workspace.xml"

  # Check if workspace.xml file exists, create if absent.
  if [[ ! -f "${idea_workspace_file}" ]]; then
    echo "${WORKSPACE_WORKSPACE_TEMPLATE}" >"${idea_workspace_file}"
  fi

  # Check if profile is already set for project.
  if [[ $(<"${idea_workspace_file}") == *"settings.xml.${ACTIVE_PROFILE}\""* ]]; then
    echo -e "Profile [${green}${bold}${ACTIVE_PROFILE}${reset}] already set for this idea project."
    exit 0
  fi

  # Check if any profile is set, inline replace settings.xml if present.
  if [[ $(<"${idea_workspace_file}") == *"MavenImportPreferences"* ]]; then
    if [[ $(<"${idea_workspace_file}") == *"menv/settings.xml."* ]]; then
      sed -i -e "s|menv/settings.xml.[A-Za-z_-]*\"|menv/settings.xml.${ACTIVE_PROFILE}\"|" "${idea_workspace_file}"
      echo -e "Profile [${green}${bold}${ACTIVE_PROFILE}${reset}] has been adjusted for this idea project."
      exit 0
    fi
    echo "The IntelliJ workspace already has some custom settings."
    echo "Please override the maven 'User setting file:' property manually"
    echo "in IntelliJ to the following value:"
    echo
    echo "    ${HOME}/.menv/settings.xml.${ACTIVE_PROFILE}"
    echo
    echo -n "${HOME}/.menv/settings.xml.${ACTIVE_PROFILE}" | pbcopy
    echo "The value has already been copied to your clipboard."
    exit 0
  fi

  # No profile is present, add current profile.
  sed -i '' '/^[[:space:]]*$/d' "${idea_workspace_file}" # Remove empty lines at end of file
  sed -i '' -e '$ d' "${idea_workspace_file}"            # remove last line </project>
  echo "${WORKSPACE_TEMPLATE}" >>"${idea_workspace_file}"
  sed -i -e 's|TEMPLATE|'"${ACTIVE_PROFILE}"'|g' "${idea_workspace_file}"
  echo -e "Profile [${green}${bold}${ACTIVE_PROFILE}${reset}] activated for this idea project."
  exit 0
}

unset_profile_for_idea_project() {

  if [[ ! -d "${PWD}/.idea" ]]; then
    echo "Not an idea project."
    exit 0
  fi

  idea_workspace_file="${PWD}/.idea/workspace.xml"

  if [[ ! -f "${idea_workspace_file}" ]]; then
    echo "No menv profile was set."
    exit 0
  fi

  retrieve_active_profile
  if [ "${ACTIVE_PROFILE}" == "${SYSTEM_DEFAULT_PROFILE_NAME}" ]; then
    echo "No menv profile available."
    exit 1
  fi

  # Check if the active profile was set
  if [[ ! $(<"${idea_workspace_file}") == *"menv/settings.xml.${ACTIVE_PROFILE}\""* ]]; then
    echo "No active menv profile was set in IntelliJ."
    exit 0
  fi

  # Other IntelliJ options
  if [[ $(<"${idea_workspace_file}") == *"alwaysUpdateSnapshots"* ]] || [[ $(<"${idea_workspace_file}") == *"localRepository"* ]] || [[ $(<"${idea_workspace_file}") == *"printErrorStackTraces"* ]] || [[ $(<"${idea_workspace_file}") == *"usePluginRegistry"* ]] || [[ $(<"${idea_workspace_file}") == *"workOffline"* ]]; then
    # Only remove the userSettingsFile option then
    sed -i -e 's|<option name="userSettingsFile".*>||g' .idea/workspace.xml
    echo -e "Profile [${green}${bold}${ACTIVE_PROFILE}${reset}] option removed for this idea project."
    exit 0
  fi

  echo -e "Profile [${green}${bold}${ACTIVE_PROFILE}${reset}] removed for this idea project."
  #  sed -i '' '/<component name="MavenImportPreferences">/,/<\/component>/d' .idea/workspace.xml
  sed -i '' '/<option name="generalSettings">/,/<\/option>/d' .idea/workspace.xml
}

# creating the menv home if not exists
if [[ ! -d "${HOME}/.menv" ]]; then
  mkdir -p "${HOME}/.menv" 2>/dev/null
  install_menv_mvn
fi

check_valid_editor() {
  MY_MENV_EDITOR=${MENV_EDITOR:-${EDITOR:-vi}}
  if [[ ! -f $(which "${MY_MENV_EDITOR}") ]]; then
    echo "Can not find a viable editor."
    echo "Please define the env var MENV_EDITOR or EDITOR or install vi."
    exit 1
  fi
}

choose_edit_profile() {
  get_profiles
  if [[ ${count} -gt 1 ]]; then
    select chosen in "${profiles[@]}"; do
      case $REPLY in
      q | 0)
        echo "Quitting...."
        return 0
        ;;
      *)
        if [[ 1 -le "$REPLY" ]] && [[ $REPLY -le ${count} ]]; then
          if [[ "$1" == "maven" ]]; then
            exec "${MY_MENV_EDITOR}" "${HOME}/.menv/${chosen}.maven_opts"
          else
            exec "${MY_MENV_EDITOR}" "${HOME}/.menv/settings.xml.${chosen}"
          fi
        else
          echo "Wrong choice."
          echo "Please try again..."
        fi
        ;;
      esac
    done
  fi
}

edit_profile() {
  check_valid_editor
  if [[ -z "$1" ]]; then
    retrieve_active_profile
    if [[ "${ACTIVE_PROFILE}" == "${SYSTEM_DEFAULT_PROFILE_NAME}" ]]; then
      choose_edit_profile "settings"
    fi
    exec "${MY_MENV_EDITOR}" "${HOME}/.menv/settings.xml.${ACTIVE_PROFILE}"
  fi

  if [[ -f "${HOME}/.menv/settings.xml.$1" ]]; then
    exec "${MY_MENV_EDITOR}" "${HOME}/.menv/settings.xml.$1"
  else
    die "Profile [${green}$1${reset}] not found."
  fi
}

edit_maven_profile() {
  check_valid_editor
  if [[ -z "$1" ]]; then
    retrieve_active_profile
    if [[ "${ACTIVE_PROFILE}" == "${SYSTEM_DEFAULT_PROFILE_NAME}" ]]; then
      choose_edit_profile "maven"
    fi
    exec "${MY_MENV_EDITOR}" ~/.menv/"${ACTIVE_PROFILE}".maven_opts
  fi

  if [[ -f "${HOME}/.menv/settings.xml.$1" ]]; then
    exec "${MY_MENV_EDITOR}" "${HOME}/.menv/${1}.maven_opts"
  else
    die "Profile [${green}$1${reset}] not found."
  fi
}

# initial save of the original settings.xml
if [[ ! -f "${HOME}/.menv/.activated" ]]; then
  save_orig_settings_xml
fi

case "$1" in
active | a | -a)
  print_active_profile
  exit 0
  ;;
delete | rm | remove)
  rm -f "${MENV_PROFILE}" 2>/dev/null
  exit 0
  ;;
edit | e)
  edit_profile "$2"
  exit 0
  ;;
editopts | eo)
  edit_maven_profile "$2"
  exit 0
  ;;
help | -h | --help)
  echo "$USAGE"
  exit 0
  ;;
install)
  brew_relink_menv
  exit 0
  ;;
list | ls)
  list_settings
  exit 0
  ;;
profile | p)
  set_profile "$2"
  ;;
version | -v | --version)
  echo "$(basename "$0") (c) 2021 by Ivo Woltring"
  echo "Version ${VERSION}"
  exit 0
  ;;
idea | i)
  set_profile_for_idea_project
  exit 0
  ;;
rmidea)
  unset_profile_for_idea_project
  exit 0
  ;;
*)
  die "Unknown OPTION.\n$USAGE"
  ;;
esac
